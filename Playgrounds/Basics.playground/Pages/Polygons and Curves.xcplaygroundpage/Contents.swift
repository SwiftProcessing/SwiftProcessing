//: [Previous](@previous)
/*:
 # Polygons and Curves
 ### by Masood Kamandy for GSoC 2021
 
 ## Introduction
 
 There are some more complex shapes that can't be drawn with the primitives. Imagine that you're tracing the silhoette of a body or that you're creating a complex figure with points that are generated by your program. For this purpose, we can create our own shapes.
 
 ## Basic Structure of a Shape
 
 When creating complex shapes in SwiftProcessing, you use the following structure:
 
 1. Use `beginShape()` to start your shape.
 1. Draw the vertices of your ship using `vertex(x, y)` for polygons or `curveVertex(x, y)` for curves.
 1. Use `endShape()` for an open shape or `endShape(.close)` for a closed shape.
 
 ## Polygons and Curves
 
 There are two types of shapes you can create in SwiftProcessing. One is the **polygon** and the other is a **curve**. Both polygons and curves can be constructed as **open** or **closed**.
 
 ### Polygons
 
 Here is a simple example of the pattern of creating a **polygon** that is **open** with 5 points (**Note:** you'd have to fill in the point values and the `...` means you'd need to follow the same pattern for all 5 points):
 
 ```
 beginShape()
 vertex(x1, y1)
 ...
 vertex(x5, y5)
 endShape()
 ```
 
 ### Curve
 
 A similar **curve** can be created with the following code. This time let's **close** the shape.
 
 ```
 beginShape()
 curveVertex(x1, y1)
 ...
 curveVertex(x5, y5)
 endShape(.close)
 ```
 
 **Note**: The vertices of a curve are also called **control points.**
 
 ## Let's create a closed curve with red control points.
 */
import SwiftProcessing
import PlaygroundSupport
import UIKit

class MySketch: Sketch, SketchDelegate {
    
    var x1 = 50
    var y1 = 50
    
    var x2 = 300
    var y2 = 400
    
    var x3 = 700
    var y3 = 300
    
    var x4 = 400
    var y4 = 900
    
    func setup() {
        background(0)
        
        noFill()
        stroke(255)
        
        // Draw curves using random points.
        beginShape()
        curveVertex(x1, y1)
        curveVertex(x2, y2)
        curveVertex(x3, y3)
        curveVertex(x4, y4)
        endShape(.close)
        
        // Draw control points as red circles.
        fill(255, 0, 0)
        noStroke()
        
        circle(x1, y1, 15)
        circle(x2, y2, 15)
        circle(x3, y3, 15)
        circle(x4, y4, 15)
    }
    
    func draw() {
        
        
    }
}
//: ## Can you change this playground to draw a polygon instead of a curve? Can you use curves to draw something? Here's a hint: You can use an image editing program to plan out curves using images!
PlaygroundPage.current.needsIndefiniteExecution = true
PlaygroundPage.current.setLiveView(MySketch())
//: [Next](@next)
